/*Cr√©ez un programme qui v√©rifie si les exercices de votre √©preuve de l‚Äôair sont pr√©sents dans le r√©pertoire et qu‚Äôils fonctionnent (sauf celui l√†). Cr√©ez au moins un test pour chaque exercice.


Exemples d‚Äôutilisation :
$> python exo.py
air00 (1/3) : success
air00 (2/3) : success
air00 (3/3) : success
air01 (1/2) : success
air01 (2/2) : failure
air02 (1/1) : success
... 
Total success: (56/62)


Bonus : trouvez le moyen d‚Äôutiliser du vert et du rouge pour rendre r√©ussites et √©checs plus visibles.
 */

/*
fs.exists = savoir si le fichier existe
fs.appendFile = ajouter contenu √† un fichier
fs.open = ouvrir un fichier
fs.writeFile = remplacer le contenu d'un fichier
fs.readFile = lire un fichier */

////üî¥ test air01.js üî¥////
const { execSync } = require("child_process");
const chalk = require("chalk");
let succ√®s = 0;
let nombreTest = 0;
function metaExercice(epreuve, r√©sultat_attendu, arguments) {
  nombreTest += 1;
  const output = [execSync(`${arguments}`).toString()];
  if (output[0] == r√©sultat_attendu[0] || output[0] == "error\n") {
    succ√®s += 1;
    console.log(`${epreuve} : ${chalk.green("success")}`);
  } else {
    console.log(`${epreuve} : ${chalk.red("failure")}`);
  }
}

metaExercice(
  "air01",
  ["salut \nles \ngars\n"],
  'node air01.js "salut les gars"'
);
metaExercice(
  "air02",
  ["Crevette magique dans \nmer des √©toiles \n"],
  "node air02.js 'Crevette magique dans la mer des √©toiles' 'la'"
);

console.log(`${chalk.blue(`tests r√©ussis : ${succ√®s}/${nombreTest}`)}`);
